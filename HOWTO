Edit /etc/rc.conf - enable either static or DHCP (by setting 'interface=eth0'), set LOCALE, and hostname, add sshd to DAEMONS

Modify /etc/hosts and add hostname to localhost (e.g add 'freeswitch' to localhost line)

Modify /etc/locale.gen to include all required locales, then run /usr/sbin/locale-gen

Modify /etc/pacman.conf and add freeswitch.org and required custom repos to below [custom], remember to remove the '#' from [custom] line

Modify /etc/pacman.conf to enable most options such as UseSyslog, ShowSize, UseDelta, TotalDownload, and CheckSpace.

Remove /etc/profile.d/locale.sh if it exists. The system will regenerate it.
BUILD INSTRUCTIONS

On an archlinux box with a user named 'me' (can be anything), do the following:
  
  # Set up the environment
  
  # NOTE - Make sure you have your $HOME/.ssh directory set up with your key for accessing GH repos
  #        Make sure you have your $HOME/.gitconfig set with everything GH needs
  #        Change wheel group to not need a password if you don't want to be prompted every build.
  #
  mkdir $HOME/build
  
  # Install packages we need for building the ISO
  sudo pacman -S time tmux fakeroot sudo devtools squashfs-tools git libisoburn --needed
  # Grab our archiso creation repo
  cd $HOME/build && git clone git://github.com/rubyists/archlinux_isomaker
  # Install our mkarchiso script(s) 
  cd archlinux_isomaker/archiso && sudo make install
  # Remove existing tcc_arch_installer and regrab to make sure we're up to date.
  # This will be repopulated every single ISO build run with any updates. but its also part of archlinux_isomaker so we have a copy too.
  cd $HOME/build/archlinux_isomaker/configs/releng/root-image/home/arch
  rm -rf tcc_arch_installer && git clone git://github.com/rubyists/tcc_arch_installer
  cd tcc_arch_installer && git checkout development && git pull origin
  # Now we can create a new image
  cd $HOME/build/archlinux_isomaker/config/releng # everything is based off this directory
  ./make_my_cd.sh # this updates the tcc_arch_installer files we populate into the ISO, and then creates 'single all' for us
  

TODO
----
Make sure that nothing is mount on /mnt as the upcoming package(s) upgrade(s) will modify it.

Run dhcpcd eth0

Run pacman -Syy to update all package lists.
Then run pacman -Syu  to update the entire system. Will have to run twice because pacman gets updated first, and _then_ you can update the system.

Install additional packages - sudo, xz, readline, pam, ncurses, linux-api-headers, openssh, openssl, and base-devel if not selected during installation of the initial system

Add required user 'callcenter'
Copy authorized_keys into new 'callcenter' user.

NOTE: later install of freeswitch will create the freeswitch user and group.

Add additional non-root user and add additional group membership to 'wheel'
Use visudo to enable 'wheel' group rights to use sudo. Use first one as it requires the user to enter their own password to execute sudo.

Once all is done, reboot the system to ensure it boots clean.

Now to install runit properly. See these URLS
--------
https://wiki.archlinux.org/index.php/Arch_User_Repository
https://wiki.archlinux.org/index.php/Runit

Now do the following
-----
mkdir $HOME/builds
cd $HOME/builds
wget http://aur.archlinux.org/packages/fg/fgetty/fgetty.tar.gz
wget http://aur.archlinux.org/packages/ru/runit-dietlibc/runit-dietlibc.tar.gz
wget http://aur.archlinux.org/packages/ru/runit-run/runit-run.tar.gz
wget http://aur.archlinux.org/packages/ru/runit-services/runit-services.tar.gz
wget http://aur.archlinux.org/packages/sv/sv-helper/sv-helper.tar.gz
wget http://aur.archlinux.org/packages/so/socklog-dietlibc/socklog-dietlibc.tar.gz
wget http://aur.archlinux.org/packages/fr/freeswitch-git/freeswitch-git.tar.gz

for name in ./*.gz ; do tar -xzvf $name ; done
cd fgetty && makepkg -si
cd ../runit-dietlib && makepkg -si
cd ../runit-run && makepkg -si
cd ../socklog-dietlib && makepkg -si
cd ../runit-services && makepkg -si
cd ../sv-helper && makepkg -si
cd ../freeswitch-git && makepkg -si

sudo ln -s /etc/sv/sshd /service/sshd
sudo ln -s /etc/sv/cron /service/cron
sudo socklog-conf unix root daemon
sudo socklog-conf klog root daemon
sudo ln -s /etc/sv/socklog-unix /service/socklog-unix
sudo ln -s /etc/sv/socklog-klog /service/socklog-klog
sudo ln -s /etcv/sv/freeswitch /service/freeswitch
sudo /sbin/init.sysv 6  # This causes the machine to reboot so runit takes over.
